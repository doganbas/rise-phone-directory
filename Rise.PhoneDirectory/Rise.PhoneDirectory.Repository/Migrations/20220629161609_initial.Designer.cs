// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Rise.PhoneDirectory.Repository;

#nullable disable

namespace Rise.PhoneDirectory.Repository.Migrations
{
    [DbContext(typeof(PhoneDirectoryDbContext))]
    [Migration("20220629161609_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Rise.PhoneDirectory.Store.Models.ContactInformation", b =>
                {
                    b.Property<int>("ContactInformationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ContactInformationId"));

                    b.Property<string>("InformationContent")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("character varying(400)");

                    b.Property<int>("InformationType")
                        .HasColumnType("integer");

                    b.Property<int>("PersonId")
                        .HasColumnType("integer");

                    b.HasKey("ContactInformationId");

                    b.HasIndex("InformationType");

                    b.HasIndex("PersonId", "InformationType", "InformationContent")
                        .IsUnique();

                    b.ToTable("ContactInformations", "Directory");

                    b.HasData(
                        new
                        {
                            ContactInformationId = 1,
                            InformationContent = "carol@yoga.com",
                            InformationType = 1,
                            PersonId = 1
                        },
                        new
                        {
                            ContactInformationId = 2,
                            InformationContent = "1-541-754-3010",
                            InformationType = 0,
                            PersonId = 1
                        },
                        new
                        {
                            ContactInformationId = 3,
                            InformationContent = "Washington",
                            InformationType = 2,
                            PersonId = 1
                        },
                        new
                        {
                            ContactInformationId = 4,
                            InformationContent = "bella@topitoff.com",
                            InformationType = 1,
                            PersonId = 2
                        },
                        new
                        {
                            ContactInformationId = 5,
                            InformationContent = "1-541-452-2180",
                            InformationType = 0,
                            PersonId = 2
                        },
                        new
                        {
                            ContactInformationId = 6,
                            InformationContent = "Washington",
                            InformationType = 2,
                            PersonId = 2
                        },
                        new
                        {
                            ContactInformationId = 7,
                            InformationContent = "diana@grape.com",
                            InformationType = 1,
                            PersonId = 3
                        },
                        new
                        {
                            ContactInformationId = 8,
                            InformationContent = "1-852-142-1149",
                            InformationType = 0,
                            PersonId = 3
                        },
                        new
                        {
                            ContactInformationId = 9,
                            InformationContent = "California",
                            InformationType = 2,
                            PersonId = 3
                        },
                        new
                        {
                            ContactInformationId = 10,
                            InformationContent = "emma@sagainnovations.com",
                            InformationType = 1,
                            PersonId = 4
                        },
                        new
                        {
                            ContactInformationId = 11,
                            InformationContent = "1-852-854-6310",
                            InformationType = 0,
                            PersonId = 4
                        },
                        new
                        {
                            ContactInformationId = 12,
                            InformationContent = "California",
                            InformationType = 2,
                            PersonId = 4
                        });
                });

            modelBuilder.Entity("Rise.PhoneDirectory.Store.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PersonId"));

                    b.Property<string>("CompanyName")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("Surname")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.HasKey("PersonId");

                    b.HasIndex("Name", "Surname")
                        .IsUnique();

                    b.ToTable("Persons", "Directory");

                    b.HasData(
                        new
                        {
                            PersonId = 1,
                            CompanyName = "What You Will Yoga Inc.",
                            Name = "Carol",
                            Surname = "Austin"
                        },
                        new
                        {
                            PersonId = 2,
                            CompanyName = "Top It Off Inc.",
                            Name = "Bella",
                            Surname = "Burgess"
                        },
                        new
                        {
                            PersonId = 3,
                            CompanyName = "Soft As a Grape Inc.",
                            Name = "Diana",
                            Surname = "Edmunds"
                        },
                        new
                        {
                            PersonId = 4,
                            CompanyName = "Saga Innovations",
                            Name = "Emma",
                            Surname = "King"
                        });
                });

            modelBuilder.Entity("Rise.PhoneDirectory.Store.Models.Report", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ReportId"));

                    b.Property<int>("ReportStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("RequestTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("ReportId");

                    b.ToTable("Reports", "Directory");
                });

            modelBuilder.Entity("Rise.PhoneDirectory.Store.Models.ContactInformation", b =>
                {
                    b.HasOne("Rise.PhoneDirectory.Store.Models.Person", "Person")
                        .WithMany("ContactInformations")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Rise.PhoneDirectory.Store.Models.Person", b =>
                {
                    b.Navigation("ContactInformations");
                });
#pragma warning restore 612, 618
        }
    }
}
